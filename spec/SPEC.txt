Spec automatically generated with a script.
This spec's sources were made by Nykenik24 (https://github.com/Nykenik24) for the Pico86 repository (https://github.com/Nykenik24/pico86) for learning purpose.
---


--- SPEC/INSTRUCTIONS/FLOW.TXT ---
NOTES:
  * A "J" prefixed will normally mean that the instruction jumps, conditionally or not.

* JMP: Unconditional jump to label/adress.
* JE/JZ: Jump if equal/Jump if zero. Jump if zero flag is set.
* JNE/JNZ: Jump if not equal/Jump if not zero. Jump if zero flag is clear.
* JC: Jump if carry flag is set.
* JNC: Jump if carry flag is clear.
* JO: Jump if overflow flag is set.
* JNO: Jump if overflow flag is clear.

--- SPEC/INSTRUCTIONS/ARITHMETIC.TXT ---
NOTES:
  * An "I" prefixed will normally mean the signed version of other instruction.

* ADD: Performs addition on two operands.
* SUB: Subtracts the second operand from the first.
* MUL: Unsigned multiplication of two operands. \ Multiplication
* IMUL: Signed version of MUL.					/
* DIV: Unsigned division of two operands.		\ Division
* IDIV: Signed version of DIV.					/
* INC: Increment (add 1) an operand.
* DEC: Decrement (subtract 1) an operand.
* NEG: Negates an operand.
* CMP: Compares two operands.

--- SPEC/INSTRUCTIONS/LOGICAL.TXT ---
* AND: Logical AND
* OR: Logical OR
* XOR: Logical XOR
* NOT: Logical NOT
* SHL: Shift left. Multiplies by 2.
* SHR: Shift right. Divides by 2.
* SAR: Arithmetic Shift Right. Shifts to the right, preserving the sign bit.
* ROL: Rotate Left.
* ROR: Rotate Right.

--- SPEC/REGISTERS.TXT ---
NOTE: Based on Intel 8086 registers
  src: https://en.wikipedia.org/wiki/Intel_8086#Registers_and_instruction

NOTE: Every main register contains high and low 8-bit registers
* AX --> Primary				 \
  * AL, AH						 |
* BX --> Base					 |
  * BL, BH						 | Main registers
* CX --> Counter				 |	
  * CL, CH						 | 
* DX --> Extended access		 |
  * DL, DH						 /

* SI --> Source Index		   \
* DI --> Destination Index     | Index registers
* BP --> Base Pointer		   |
* SP --> Stack Pointer	       / 

* IP --> Instruction Pointer (Program counter)

* CS --> Code Segment
* DS --> Data Segment
* ES --> Extra Segment
* SS --> Stack Segment

* Status register:
  * O --> Overflow flag	       \
  * D --> Direction flag	   |
  * I --> Interrupt flag	   |
  * T --> Trap flag			   |
  * S --> Negative/Sign flag   | Flags
  * Z --> Zero flag		       |
  * A --> Half-carry flag	   |
  * P --> Parity flag		   |
  * C --> Carry flag		   /
